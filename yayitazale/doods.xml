<?xml version="1.0"?>
<Container version="2">
  <Name>doods</Name>
  <Repository>snowzach/doods</Repository>
  <Registry>https://hub.docker.com/r/snowzach/doods/</Registry>
  <Network>bridge</Network>
  <MyIP/>
  <Shell>sh</Shell>
  <Privileged>false</Privileged>
  <Support>https://hub.docker.com/r/snowzach/doods/</Support>
  <Project>https://github.com/snowzach/doods/</Project>
  <Overview>DOODS is a GRPC/REST service that detects objects in images using TensorFlow. It's designed to be very easy to use, run as a container and available remotely. Compatible with Coral Edge TPU usb accelerator using tflite.&#xD;
&#xD;
Steps to rus the docker:&#xD;
1. Create the app folder [b]/appdata/doods[/b] and copy the [a href="https://raw.githubusercontent.com/snowzach/doods/master/fetch_models.sh"]https://raw.githubusercontent.com/snowzach/doods/master/fetch_models.sh[/a] there.&#xD;
2. Use the unraid console to run it to create a models directory and download several models and outputs and an [b]example.yaml[/b] config file.&#xD;
3. Copy the example and with name config.yaml and edit according to your need.&#xD;
4. Plug the Coral USB if you are going to use it.&#xD;
5. Run de docker.&#xD;
&#xD;
[span style='color: red;'][b]Note:[/b][/span] If you want to run it in docker using the Coral EdgeTPU, you need to pass the device [b]/dev/bus/usb[/b] to the container. See the documentation for more details.&#xD;
&#xD;
[span style='color: red;'][b]Note:[/b][/span] The log level is setup to [b]INFO[/b] by default, you can change it to [b]DEBUG[/b] to at first time to debug the models output working. See the documentation for more details.&#xD;
&#xD;
[span style='color: red;'][b]Detector Types Supported[/b][/span]&#xD;
*  tflite - Tensorflow lite models - Supports Coral EdgeTPU if hwAccel: true and appropriate model is used&#xD;
*  tensorflow - Tensorflow&#xD;
&#xD;
EdgeTPU models can be downloaded from here: [a href="https://coral.ai/models/"]https://coral.ai/models/[/a] (Use the Object Detection Models)</Overview>
  <Category>HomeAutomation: Security: Tools: Status:Stable</Category>
  <WebUI/>
  <TemplateURL/>
  <Icon>https://upload.wikimedia.org/wikipedia/commons/thumb/2/2d/Tensorflow_logo.svg/1200px-Tensorflow_logo.svg.png</Icon>
  <ExtraParams/>
  <PostArgs/>
  <CPUset/>
  <DateInstalled>1601974765</DateInstalled>
  <DonateText/>
  <DonateLink/>
  <Description>DOODS is a GRPC/REST service that detects objects in images using TensorFlow. It's designed to be very easy to use, run as a container and available remotely. Compatible with Coral Edge TPU usb accelerator using tflite.&#xD;
&#xD;
Steps to rus the docker:&#xD;
1. Create the app folder [b]/appdata/doods[/b] and copy the [a href="https://raw.githubusercontent.com/snowzach/doods/master/fetch_models.sh"]https://raw.githubusercontent.com/snowzach/doods/master/fetch_models.sh[/a] there.&#xD;
2. Use the unraid console to run it to create a models directory and download several models and outputs and an [b]example.yaml[/b] config file.&#xD;
3. Copy the example and with name config.yaml and edit according to your need.&#xD;
4. Plug the Coral USB if you are going to use it.&#xD;
5. Run de docker.&#xD;
&#xD;
[span style='color: red;'][b]Note:[/b][/span] If you want to run it in docker using the Coral EdgeTPU, you need to pass the device [b]/dev/bus/usb[/b] to the container. See the documentation for more details.&#xD;
&#xD;
[span style='color: red;'][b]Note:[/b][/span] The log level is setup to [b]INFO[/b] by default, you can change it to [b]DEBUG[/b] to at first time to debug the models output working. See the documentation for more details.&#xD;
&#xD;
[span style='color: red;'][b]Detector Types Supported[/b][/span]&#xD;
*  tflite - Tensorflow lite models - Supports Coral EdgeTPU if hwAccel: true and appropriate model is used&#xD;
*  tensorflow - Tensorflow&#xD;
&#xD;
EdgeTPU models can be downloaded from here: [a href="https://coral.ai/models/"]https://coral.ai/models/[/a] (Use the Object Detection Models)</Description>
  <Networking>
    <Mode>bridge</Mode>
    <Publish>
      <Port>
        <HostPort>8080</HostPort>
        <ContainerPort>8080</ContainerPort>
        <Protocol>tcp</Protocol>
      </Port>
    </Publish>
  </Networking>
  <Data>
    <Volume>
      <HostDir>/mnt/user/appdata/doods/models</HostDir>
      <ContainerDir>/opt/doods/models</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
    <Volume>
      <HostDir>mnt/user/appdata/doods/config.yaml</HostDir>
      <ContainerDir>/opt/doods/config.yaml</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
  </Data>
  <Environment>
    <Variable>
      <Value>INFO</Value>
      <Name>LOGGER_LEVEL</Name>
      <Mode/>
    </Variable>
  </Environment>
  <Labels/>
  <Config Name="API port" Target="8080" Default="" Mode="tcp" Description="Container Port: 8080" Type="Port" Display="always" Required="true" Mask="false">8080</Config>
  <Config Name="Models" Target="/opt/doods/models" Default="" Mode="rw" Description="Container Path: /opt/doods/models" Type="Path" Display="always" Required="true" Mask="false">/mnt/user/appdata/doods/models</Config>
  <Config Name="Config file" Target="/opt/doods/config.yaml" Default="" Mode="rw" Description="Container Path: /opt/doods/config.yaml" Type="Path" Display="always" Required="true" Mask="false">/mnt/user/appdata/doods/config.yaml</Config>
  <Config Name="Coral Edge TPU USB Device (optional)" Target="" Default="" Mode="" Description="/dev/bus/usb/" Type="Device" Display="always" Required="false" Mask="false">/dev/bus/usb/</Config>
  <Config Name="Logger level" Target="LOGGER_LEVEL" Default="" Mode="" Description="Logger level by default INFO, can change to DEBUG" Type="Variable" Display="advanced" Required="false" Mask="false">INFO</Config>
</Container>
